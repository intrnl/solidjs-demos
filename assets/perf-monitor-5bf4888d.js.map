{"version":3,"file":"perf-monitor-5bf4888d.js","sources":["../../node_modules/.pnpm/perf-monitor@0.4.1/node_modules/perf-monitor/dist/es5/perf-monitor.js"],"sourcesContent":["var MonitorMaxSamples = 100;\nvar MonitorSamplesResult = (function () {\n    function MonitorSamplesResult(min, max, mean, last) {\n        this.min = min;\n        this.max = max;\n        this.mean = mean;\n        this.last = last;\n    }\n    return MonitorSamplesResult;\n}());\n/**\n * Profile Samples.\n */\nvar MonitorSamples = (function () {\n    function MonitorSamples(maxSamples) {\n        this.samples = [];\n        this.maxSamples = maxSamples;\n        this._i = -1;\n    }\n    MonitorSamples.prototype.addSample = function (v) {\n        this._i = (this._i + 1) % this.maxSamples;\n        this.samples[this._i] = v;\n    };\n    MonitorSamples.prototype.each = function (fn) {\n        var samples = this.samples;\n        for (var i = 0; i < samples.length; i++) {\n            fn(samples[(this._i + 1 + i) % samples.length], i);\n        }\n    };\n    MonitorSamples.prototype.calc = function () {\n        var samples = this.samples;\n        if (samples.length === 0) {\n            return new MonitorSamplesResult(0, 0, 0, 0);\n        }\n        var min = samples[(this._i + 1) % samples.length];\n        var max = min;\n        var sum = 0;\n        for (var i = 0; i < samples.length; i++) {\n            var k = samples[(this._i + 1 + i) % samples.length];\n            if (k < min) {\n                min = k;\n            }\n            if (k > max) {\n                max = k;\n            }\n            sum += k;\n        }\n        var last = samples[this._i];\n        var mean = sum / samples.length;\n        return new MonitorSamplesResult(min, max, mean, last);\n    };\n    return MonitorSamples;\n}());\n\n/**\n * Basic Counter.\n */\nvar BasicCounter = (function () {\n    function BasicCounter() {\n        this.value = 0;\n        this.onChange = null;\n    }\n    BasicCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return BasicCounter;\n}());\nvar TimestampedValue = (function () {\n    function TimestampedValue(timestamp, value) {\n        this.value = value;\n        this.next = null;\n    }\n    return TimestampedValue;\n}());\n/**\n * Sliding Counter counts how many times `inc` method were called during `interval` period.\n */\nvar SlidingCounter = (function () {\n    function SlidingCounter(interval) {\n        var _this = this;\n        this._dec = function () {\n            var now = performance.now();\n            while (_this._firstTimestamp !== null) {\n                var nextTimestamp = _this._firstTimestamp;\n                if (now >= nextTimestamp.value) {\n                    _this.value -= nextTimestamp.value;\n                    _this._firstTimestamp = _this._firstTimestamp.next;\n                }\n                else {\n                    setTimeout(_this._dec, Math.ceil(nextTimestamp.value - now));\n                    break;\n                }\n            }\n            if (_this._firstTimestamp === null) {\n                _this._lastTimestamp = null;\n            }\n            _this.onChange();\n        };\n        this.interval = interval;\n        this.value = 0;\n        this.onChange = null;\n        this._firstTimestamp = null;\n        this._lastTimestamp = null;\n    }\n    SlidingCounter.prototype.inc = function (value) {\n        if (value > 0) {\n            var timestamp = new TimestampedValue(performance.now() + this.interval, value);\n            if (this._firstTimestamp === null) {\n                this._firstTimestamp = timestamp;\n                setTimeout(this._dec, this.interval);\n            }\n            else {\n                this._lastTimestamp.next = timestamp;\n            }\n            this._lastTimestamp = timestamp;\n            this.value += value;\n            this.onChange();\n        }\n    };\n    return SlidingCounter;\n}());\n\nvar frameTasks = [];\nvar rafId = -1;\n/**\n * Schedule new task that will be executed on the next frame.\n */\nfunction scheduleNextFrameTask(task) {\n    frameTasks.push(task);\n    if (rafId === -1) {\n        requestAnimationFrame(function (t) {\n            rafId = -1;\n            var tasks = frameTasks;\n            frameTasks = [];\n            for (var i = 0; i < tasks.length; i++) {\n                tasks[i]();\n            }\n        });\n    }\n}\n\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar MonitorGraphHeight = 30;\nvar MonitorGraphWidth = MonitorMaxSamples;\nvar Widget = (function () {\n    function Widget(name) {\n        var _this = this;\n        this._sync = function () {\n            _this.sync();\n            _this._dirty = false;\n        };\n        this.name = name;\n        this.element = document.createElement(\"div\");\n        this.element.style.cssText = \"padding: 2px;\" +\n            \"background-color: #020;\" +\n            \"font-family: monospace;\" +\n            \"font-size: 12px;\" +\n            \"color: #0f0\";\n        this._dirty = false;\n        this.invalidate();\n    }\n    Widget.prototype.invalidate = function () {\n        if (!this._dirty) {\n            this._dirty = true;\n            scheduleNextFrameTask(this._sync);\n        }\n    };\n    Widget.prototype.sync = function () {\n        throw new Error(\"sync method not implemented\");\n    };\n    return Widget;\n}());\nvar MonitorWidgetFlags;\n(function (MonitorWidgetFlags) {\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMin\"] = 1] = \"HideMin\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMax\"] = 2] = \"HideMax\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideMean\"] = 4] = \"HideMean\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideLast\"] = 8] = \"HideLast\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"HideGraph\"] = 16] = \"HideGraph\";\n    MonitorWidgetFlags[MonitorWidgetFlags[\"RoundValues\"] = 32] = \"RoundValues\";\n})(MonitorWidgetFlags || (MonitorWidgetFlags = {}));\nvar MonitorWidget = (function (_super) {\n    __extends(MonitorWidget, _super);\n    function MonitorWidget(name, flags, unitName, samples) {\n        var _this = _super.call(this, name) || this;\n        _this.flags = flags;\n        _this.unitName = unitName;\n        _this.samples = samples;\n        var label = document.createElement(\"div\");\n        label.style.cssText = \"text-align: center\";\n        label.textContent = _this.name;\n        var text = document.createElement(\"div\");\n        if ((flags & MonitorWidgetFlags.HideMin) === 0) {\n            _this.minText = document.createElement(\"div\");\n            text.appendChild(_this.minText);\n        }\n        else {\n            _this.minText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMax) === 0) {\n            _this.maxText = document.createElement(\"div\");\n            text.appendChild(_this.maxText);\n        }\n        else {\n            _this.maxText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideMean) === 0) {\n            _this.meanText = document.createElement(\"div\");\n            text.appendChild(_this.meanText);\n        }\n        else {\n            _this.meanText = null;\n        }\n        if ((flags & MonitorWidgetFlags.HideLast) === 0) {\n            _this.lastText = document.createElement(\"div\");\n            text.appendChild(_this.lastText);\n        }\n        else {\n            _this.lastText = null;\n        }\n        _this.element.appendChild(label);\n        _this.element.appendChild(text);\n        if ((flags & MonitorWidgetFlags.HideGraph) === 0) {\n            _this.canvas = document.createElement(\"canvas\");\n            _this.canvas.style.cssText = \"display: block; padding: 0; margin: 0\";\n            _this.canvas.width = MonitorGraphWidth;\n            _this.canvas.height = MonitorGraphHeight;\n            _this.ctx = _this.canvas.getContext(\"2d\");\n            _this.element.appendChild(_this.canvas);\n        }\n        else {\n            _this.canvas = null;\n            _this.ctx = null;\n        }\n        return _this;\n    }\n    MonitorWidget.prototype.sync = function () {\n        var _this = this;\n        var result = this.samples.calc();\n        var scale = MonitorGraphHeight / (result.max * 1.2);\n        var min;\n        var max;\n        var mean;\n        var last;\n        if ((this.flags & MonitorWidgetFlags.RoundValues) === 0) {\n            min = result.min.toFixed(2);\n            max = result.max.toFixed(2);\n            mean = result.mean.toFixed(2);\n            last = result.last.toFixed(2);\n        }\n        else {\n            min = Math.round(result.min).toString();\n            max = Math.round(result.max).toString();\n            mean = Math.round(result.mean).toString();\n            last = Math.round(result.last).toString();\n        }\n        if (this.minText !== null) {\n            this.minText.textContent = \"min: \\u00A0\" + min + this.unitName;\n        }\n        if (this.maxText !== null) {\n            this.maxText.textContent = \"max: \\u00A0\" + max + this.unitName;\n        }\n        if (this.meanText !== null) {\n            this.meanText.textContent = \"mean: \" + mean + this.unitName;\n        }\n        if (this.lastText !== null) {\n            this.lastText.textContent = \"last: \" + last + this.unitName;\n        }\n        if (this.ctx !== null) {\n            this.ctx.fillStyle = \"#010\";\n            this.ctx.fillRect(0, 0, MonitorGraphWidth, MonitorGraphHeight);\n            this.ctx.fillStyle = \"#0f0\";\n            this.samples.each(function (v, i) {\n                _this.ctx.fillRect(i, MonitorGraphHeight, 1, -(v * scale));\n            });\n        }\n    };\n    return MonitorWidget;\n}(Widget));\nvar CounterWidget = (function (_super) {\n    __extends(CounterWidget, _super);\n    function CounterWidget(name, counter) {\n        var _this = _super.call(this, name) || this;\n        _this.counter = counter;\n        _this.text = document.createElement(\"div\");\n        _this.element.appendChild(_this.text);\n        return _this;\n    }\n    CounterWidget.prototype.sync = function () {\n        this.text.textContent = this.name + \": \" + this.counter.value;\n    };\n    return CounterWidget;\n}(Widget));\n\nvar container = null;\nvar initialized = false;\n/**\n * Initialize Performance Monitor.\n */\nfunction initPerfMonitor(options) {\n    if (!initialized) {\n        if (options.container) {\n            container = options.container;\n        }\n        initialized = true;\n    }\n}\n/**\n * Check that everything is properly initialized.\n */\nfunction checkInit() {\n    if (!container) {\n        container = document.createElement(\"div\");\n        container.style.cssText = \"position: fixed;\" +\n            \"opacity: 0.9;\" +\n            \"right: 0;\" +\n            \"bottom: 0\";\n        document.body.appendChild(container);\n    }\n    initialized = true;\n}\n/**\n * Start FPS monitor\n */\nfunction startFPSMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMax |\n        MonitorWidgetFlags.HideMean | MonitorWidgetFlags.RoundValues; }\n    checkInit();\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"FPS\", flags, \"\", data);\n    container.appendChild(w.element);\n    var alpha = 2 / 121;\n    var last = 0;\n    var fps = 60;\n    function update(now) {\n        if (last > 0) {\n            fps += alpha * ((1000 / (now - last)) - fps);\n        }\n        last = now;\n        data.addSample(fps);\n        w.invalidate();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n/**\n * Start Memory Monitor\n */\nfunction startMemMonitor(flags) {\n    if (flags === void 0) { flags = MonitorWidgetFlags.HideMin | MonitorWidgetFlags.HideMean; }\n    checkInit();\n    if (performance.memory === undefined) {\n        return;\n    }\n    var data = new MonitorSamples(MonitorMaxSamples);\n    var w = new MonitorWidget(\"Memory\", flags, \"MB\", data);\n    container.appendChild(w.element);\n    function update() {\n        data.addSample(Math.round(performance.memory.usedJSHeapSize / (1024 * 1024)));\n        w.invalidate();\n        setTimeout(update, 30);\n    }\n    update();\n}\nvar ProfilerDetails = (function () {\n    function ProfilerDetails(name, unitName, flags) {\n        this.data = new MonitorSamples(MonitorMaxSamples);\n        this.widget = new MonitorWidget(name, flags, unitName, this.data);\n        this.startTime = -1;\n    }\n    return ProfilerDetails;\n}());\nvar profilerInstances = {};\nvar CounterDetails = (function () {\n    function CounterDetails(name, interval) {\n        var _this = this;\n        this.data = interval === undefined ? new BasicCounter() : new SlidingCounter(interval);\n        this.widget = new CounterWidget(name, this.data);\n        this.data.onChange = function () {\n            _this.widget.invalidate();\n        };\n    }\n    return CounterDetails;\n}());\nvar counterInstances = {};\n/**\n * Initialize profiler and insert into container.\n */\nfunction initProfiler(name, flags) {\n    if (flags === void 0) { flags = 0; }\n    checkInit();\n    var profiler = profilerInstances[name];\n    if (profiler === void 0) {\n        profilerInstances[name] = profiler = new ProfilerDetails(name, \"ms\", flags);\n        container.appendChild(profiler.widget.element);\n    }\n}\n/**\n * Initialize counter and insert into container.\n */\nfunction initCounter(name, interval) {\n    checkInit();\n    var counter = counterInstances[name];\n    if (counter === void 0) {\n        counterInstances[name] = counter = new CounterDetails(name, interval);\n        container.appendChild(counter.widget.element);\n    }\n}\nfunction startProfile(name) {\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0) {\n        profiler.startTime = performance.now();\n    }\n}\nfunction endProfile(name) {\n    var now = performance.now();\n    var profiler = profilerInstances[name];\n    if (profiler !== void 0 && profiler.startTime !== -1) {\n        profiler.data.addSample(now - profiler.startTime);\n        profiler.widget.invalidate();\n    }\n}\nfunction count(name, value) {\n    if (value === void 0) { value = 1; }\n    var counter = counterInstances[name];\n    if (counter !== void 0) {\n        counter.data.inc(value);\n    }\n}\n/**\n * lookup a profile by name\n * @param name the name of the profile to lookup\n */\nfunction getProfile(name) {\n    return profilerInstances[name];\n}\n/**\n * lookup a counter by name\n * @param name the name of the counter to lookup\n */\nfunction getCounter(name) {\n    return counterInstances[name];\n}\n\nexport { initPerfMonitor, startFPSMonitor, startMemMonitor, ProfilerDetails, CounterDetails, initProfiler, initCounter, startProfile, endProfile, count, getProfile, getCounter, MonitorSamplesResult, MonitorMaxSamples, MonitorSamples, BasicCounter, SlidingCounter, Widget, MonitorWidgetFlags, MonitorWidget, CounterWidget };\n"],"names":["MonitorMaxSamples","MonitorSamplesResult","min","max","mean","last","this","MonitorSamples","maxSamples","samples","_i","prototype","addSample","v","each","fn","i","length","calc","sum","k","frameTasks","rafId","extendStatics","MonitorWidgetFlags","__extends","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","create","Widget","name","_this","_sync","sync","_dirty","element","document","createElement","style","cssText","invalidate","task","push","requestAnimationFrame","t","tasks","Error","MonitorWidget","_super","flags","unitName","call","label","textContent","text","HideMin","minText","appendChild","HideMax","maxText","HideMean","meanText","HideLast","lastText","HideGraph","canvas","width","height","ctx","getContext","result","scale","RoundValues","toFixed","Math","round","toString","fillStyle","fillRect","CounterWidget","counter","value","container","checkInit","body","startFPSMonitor","data","w","fps","update","now","startMemMonitor","undefined","performance","memory","usedJSHeapSize","setTimeout","ProfilerDetails","widget","startTime","profilerInstances","initProfiler","profiler","startProfile","endProfile"],"mappings":"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","x_google_ignoreList":[0]}